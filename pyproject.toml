[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "scintpy"
version = "0.1.0"
description = "A multimodel scintillation simulator."  
authors = ["tapyu <rubem.engenharia@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
skyfield = ">=1.49"
requests = "^2.32.3"
numpy = "^2.1.2"
matplotlib = "^3.9.2"
scipy = "^1.14.1"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.7"
mypy = "^1.11.2"
pyupgrade = "^3.17.0"
pre-commit = "^3.8.0"
pytest = "^8.3.3"
pytest-mock = "^3.14.0"

[tool.pytest.ini_options]
markers = [
    "unit: Mark a test as a unit test",
    "integration: Mark a test as an integration test",
]

[tool.mypy]
ignore_missing_imports = true
disable_error_code = ["import-untyped"]

[tool.ruff.lint]
select = [
    "ANN", # `flake8-annotations` (ANN) - Type annotation checks (e.g., missing type annotations for functions and arguments)
    "B", # `flake8-bugbear` (B) - common bugs and design issues
    "C", # Pylint (PL) - Convention (C) - Complexity checks (e.g., McCabe complexity)
    "D", # `pydocstyle` (D) - Docstring conventions (e.g., missing or incorrectly formatted docstrings)
    "E", # Pylint (PL) - Error (E) - (e.g., syntax, whitespace)
    "W", # Pylint (PL) - Warning (W) - Warnings for certain Python style guide deviations
    "F", # Pyflakes (F) - Checks for undefined or unused variables (`flake8`-like warnings)
    "I", # isort (I) - Import-related checks (e.g., checking for order or unused imports)
    "Q", # `flake8-quotes` (Q) - Checks for quotes consistency (single vs. double quotes)
]
task-tags = [
    "BUG:",
    "CAVEAT:",
    "FIXME:",
    "TODO:",
    "TODOC:",
    "HACK:",
    "NOTE:",
    "SEE:",
    "???",
]
# ignore = [
#     "E501" # Line too long
# ]

# McCabe complexity checker configuration.
[tool.ruff.lint.mccabe]
max-complexity = 10

# Pydocstyle convention for docstrings.
[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true # ignore lengthy lines finished with codetags

# Formatting settings.
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20